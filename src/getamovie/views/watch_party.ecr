<% masthead = video %>
  <% img = masthead.backdrops.try &.[0].to_s %>
  <% color = get_avg_color(img) %>
  <div id="party_view" class="ui inverted right fixed vertical borderless black tabular menu" style="z-index: 999; padding: 1em; visibility: hidden; width: 17.5%; display: flex;">
    <h4 class="ui inverted header" style="margin-bottom: 0; font-weight: 400;">
  Invite Friends</h4>
    <div style="color: #fff; position: relative; font-size: 14px; line-height: 21px;">Share the link with others and then everyone can watch together. They'll need to join from a web browser on their computer.
    </div><button onclick="copy()" class="ui inverted basic icon labeled button" style="font-size: 1rem; line-height: 14px; text-transform: uppercase; letter-spacing: 1px; position: relative; margin-top: 12px; border-radius: 2px; background-color: #76ABDF;"><i class="linkify icon"></i>Copy Link</button>
<h4 style="margin-bottom: 0; margin-top: 14px; font-weight: 400;" class="ui inverted header">Participants</h4>
    <div id="party" class="ui inverted list" style="margin-top: 0;padding: 0.5em;margin-bottom: 8px;">
    </div>
<h4 class="ui inverted dividing header" style="margin-top: 0; margin-bottom: 0; font-weight: 400;">Group Chat</h4>
    <div class="ui inverted stripe segment" style="min-height: 40%; max-height: 40%;overflow: hidden;text-overflow: clip; display: flex;flex-direction: column-reverse; border-radius: 1px;background: transparent;"><div id="chat" class="ui comments" style="/*! margin-bottom: 12px; */">
</div>
    </div>
  
    <div class="ui inverted icon input">
    <input id="chat_message" type="text" placeholder="Say something...">
  <i class="comment alternate icon"></i></div>
</div>
</div>
<div id="masthead" class="ui inverted vertical masthead segment">

  <div class="Poster_Base" style="background-color: #<%= color %>; position: absolute;top: 0;right: 0;bottom: 0;left: 0;">
  </div>

  <div class="Poster_Art" style="position: absolute;top: 0;right: 0;bottom: 0;left: 0;opacity: 0.8;top: 0;right: 0;bottom: 0;left: 0;opacity: 0.8;background-image: <%= color %> 10%, <%= color %>00 20%);">
    <img src="/images<%= img %>" style="object-fit: cover; height: 100%; width: 100%; overflow: hidden; image-rendering: optimizequality;">
  </div>

  <div class="Poster_Gradient" style="background-image: linear-gradient(245deg, <%= color %>00 35%, <%= color %> 70%); position: absolute;top: 0;right: 0;bottom: 0;left: 0;">
  </div>

  <div class="Poster_Highlight" style="opacity: 0.7;background-image: radial-gradient(ellipse at left top, <%= color %> 5%, <%= color %>00 70%); position: absolute;top: 0;right: 0;bottom: 0;left: 0;">
  </div>

  <div class="Poster_Scrim" style="opacity: 0.35;
background-image: linear-gradient(5deg, #000 0%, transparent 50%), radial-gradient(ellipse at top right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 20%);;position: absolute;top: 0;right: 0;bottom: 0;left: 0;">
  </div>

  <div class="ui text container" style="margin-left: 56px !important; margin-right: 56px !important; margin-bottom: 12px !important;">
    <div class="ui basic segment">
      <div style="position: relative; white-space: normal;z-index: 10;top: 0;font-weight: 600;letter-spacing: -1px;color: #fff; margin: 12px 0 10px; bottom: calc(32px + 60px); font-stretch: normal; text-rendering: optimizelegibility;" class="ui huge inverted header"><%= masthead.title %></div>

      <div class="ui inverted horizontal list" style="margin-right: 12px;">
        <div class="item">
          <div class="ui inverted mini horizontal statistic">
            <div class="value" style="color: #fff; font-size: 14px !important; line-height: 21px !important; font-weight: 600;">
              <%= masthead.average_rating.try &.to_s %>
            </div>
            <div class="label">
              <i class="star icon" style="color: #ffa724"></i>
            </div>
          </div>        
        </div>
      </div>
      <div class="ui inverted horizontal list" style="margin-right: 12px;">
        <div class="item" style="color: #fff; font-size: 14px; line-height: 21px; font-weight: 600;">
          <%= recode_length_seconds(masthead.runtime.try &.to_i * 60) %>
        </div>
      </div>
      <div class="ui inverted horizontal list" style="margin-right: 12px;">
        <div class="item" style="color: #fff; font-size: 14px; line-height: 21px; font-weight: 600;">
          <%= masthead.release_date.try &.to_s.[0 .. 3] %>
        </div>
      </div>
      <% if certification = masthead.certification %>
        <% if masthead.certification != "" %>
      <div class="ui inverted horizontal list" style="margin-right: 12px;">
        <li style="color: #fff; display: flex;justify-content: center;align-items: center;flex-wrap: nowrap;text-transform: uppercase;padding: 0px 6px;border: 2px solid #fff;font-size: 14px;border-radius: 2px;letter-spacing: 1px;font-weight: 600;line-height: 0;height: 20px;margin: 0px 8px 0px 0px;">          <%= certification %>
        </li>
      </div>
    <% end %>
    <% end %>

      <div style="color: #fff; position: relative; font-size: 14px; line-height: 21px; margin: 1em 0em;">
        <%= masthead.overview %>
      </div>

      <div class="ui inverted list" style="font-size: 14px; line-height: 21px; max-width: 800px; margin-bottom: 0;">
        <div class="item">
          <p>
          <span style="color: #fff; font-weight: 600">Starring</span>
          <span style="color: #fff">
            <%= masthead.actors.try &.[0 .. 3].to_a.join(", ") %>
          </span>
          </p>
        </div>
        <div class="item">
          <p>
          <span style="color: #fff; font-weight: 600">Genres</span>
          <span style="color: #fff">
            <%= masthead.genres.try &.to_a.join(", ") %>
          </span>
          </p>
        </div>
        <% if captions.try &.to_a.size != 0 %>
        <div class="item">
          <p>
          <span style="color: #fff; font-weight: 600">Subtitles</span>
          <span style="color: #fff">
            <%= captions.try &.to_a.map { |c| c.language }.to_a.join(", ") %>
          </span>
          </p>
        </div>
      <% end %>
      <% if spoken_languages = masthead.spoken_languages %>
        <% if spoken_languages.size >= 1 %>
        <div class="item">
          <p>
          <span style="color: #fff; font-weight: 600">Audio languages</span>
          <span style="color: #fff">
            <%= spoken_languages.join(", ") %>
          </span>
          </p>
        </div>
      <% end %>
      <% end %>

      </div>
    </div>
  </div>
</div>
<div class="ui hidden divider"></div>

<div id="content" style="padding-left: 56px;padding-right: 56px;margin: auto;">
  <div class="ui basic segment">
    <div class="sixteen wide column">
      <%= rendered "components/player" %>

      <div class="ui hidden divider"></div>

      <div class="ui vertical segment">
        <div class="ui large inverted dividing header" style="font-weight: 600; letter-spacing: -0.5px">More Like This</div>
        <% items = PG_DB.query_all("SELECT * FROM movies WHERE (array_to_string(genres, ', ') LIKE '%#{video.genres.sample}%') AND (id != $1) ORDER BY random() LIMIT 18", video.id, as: Video) %>
        <div class="ui six column grid">
          <% items.each do |item| %>
            <%= rendered "components/item" %>
          <% end %>
        </div>
      </div>
      <div class="ui hidden divider"></div>
      <div class="ui vertical segment">
        <div class="ui large inverted dividing header" style="font-weight: 600; letter-spacing: -0.5px">Cast & Crew</div>
        <% video.actors.try &.to_a[0 .. 2].each do |name| %>
          <% actor = PG_DB.query_all("SELECT * FROM actors WHERE name = $1", name, as: Actor) %>

          <% if actor.size == 0 %>
            <% next %>
          <% end %>

          <% items1 = PG_DB.query_all("SELECT * FROM tv WHERE (array_to_string(actors, ', ') LIKE '%#{actor[0].name}%') AND (id != $1) LIMIT 2", video.id, as: TV) %>
          <% items2 = PG_DB.query_all("SELECT * FROM movies WHERE (array_to_string(actors, ', ') LIKE '%#{actor[0].name}%') AND (id != $1) LIMIT 2", video.id, as: Video) %>
          <% items = items1 + items2 %>
          <% if items.size == 0 %>
            <% next %>
          <% end %>
          <h2 style="font-weight: 600; color: #fff; letter-spacing: -0.5px;"><%= actor[0].name %></h2>
          <div class="ui six column grid">
            <div class="two wide column">
                <div class="ui small bordered image" style="box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;">
                  <img src="/images<%= actor[0].profile_path %>">
                </div>
            </div>

            <% items.each do |item| %>
              <%= rendered "components/item" %>
            <% end %>

          </div>
          <div class="ui section divider"></div>

        <% end %>
      </div>
    </div>
  </div>
</div>
<div class="ui hidden divider"></div>
<div class="ui hidden divider"></div>
    <script id="video_data" type="application/json">
      <%= 
        {
        "id" => video.id,
        "channel" => channel,
        "csrf_token" => URI.encode_www_form(env.get?("csrf_token").try &.as(String) || "")
        }.to_pretty_json
      %>
    </script>

<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.2.1/js.cookie.min.js" integrity="sha512-Meww2sXqNHxI1+5Dyh/9KAtvI9RZSA4c1K2k5iL02oiPO/RH3Q30L3M1albtqMg50u4gRTYdV4EXOQqXEI336A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script language="javascript" type="text/javascript">
function copy() {
    var input = document.createElement('input');
        input.setAttribute('value', 'http://188.150.12.221:3000/watch?trackId=<%= video.id %>&ch=<%= channel %>');
    document.body.appendChild(input);
    input.select();
    var result = document.execCommand('copy');
    document.body.removeChild(input);
    return result;
 }
    </script>

    <script language="javascript" type="text/javascript">
      $(document).ready(function() {
        window.addEventListener('load', (event) => {
        var ws = new WebSocket("ws://" + location.host + "/api/watch_party");
        var player = document.getElementById("player_html5_api");
        var video_data = JSON.parse(document.getElementById('video_data').innerHTML);

        var party = document.getElementById("party");
        var chat = document.getElementById("chat");
                var chat_message = document.getElementById("chat_message");
                chat_message.addEventListener("keyup", function(event) {
                {
    if(event.keyCode === 13) {
            ws.send(JSON.stringify({"op": "CHANNEL_CHAT", "d": {"channel_id": video_data.channel, "text": chat_message.value, "date": new Date().toLocaleString('en-US', {hour: '2-digit', minute: '2-digit', hour12: true})}}));
            chat_message.value = "";
    }
}});
        var party_view = document.getElementById("party_view");
        var nav = document.getElementById("nav");
        var masthead = document.getElementById("masthead");
        var pagebody = document.getElementById("content");
        var video_control_bar = document.querySelector('.vjs-control-bar');

        var isOwner = false;
        var bufferedTime = null;
        var users = 0;
        videojs(player, {}, function(){
          this.on('play', () => {
            if (isOwner == true) {
            ws.send(JSON.stringify({
              "op": "PLAYER_PLAY",
                    "d": {"channel_id": video_data.channel, "currentTime": player.currentTime}
            }));
                  }

            if (!player.seeking) {
            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">Video Resumed</div>"
            if (bufferedTime != null) {
                    if (bufferedTime - player.currentTime > 2.5) {
              player.currentTime = bufferedTime;
              bufferedTime = null;
                          }
            }
            }

          });
          this.on('seeked', () => {
            if (isOwner == true) {
            ws.send(JSON.stringify({
              "op": "PLAYER_SEEK",
                    "d": {"channel_id": video_data.channel, "currentTime": player.currentTime}
            }));

            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">Video Skipped</div>"
                  }

            if (!player.seeking) {
            if (bufferedTime != null) {
                    if (bufferedTime - player.currentTime > 2.5) {
              player.currentTime = bufferedTime;
              bufferedTime = null;
            }
            }
                  }
          });
          this.on('pause', () => {
            if (isOwner == true) {
            ws.send(JSON.stringify({
              "op": "PLAYER_PAUSE",
                    "d": {"channel_id": video_data.channel, "currentTime": player.currentTime}
            }));
            }

            if (!player.seeking) {
            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">Video Paused</div>"
                  }

          });
          this.on('timeupdate', () => {
            if (isOwner == true) {
            ws.send(JSON.stringify({
              "op": "TIME_UPDATE",
                    "d": {"channel_id": video_data.channel, "currentTime": player.currentTime}
            }));}
            if (!player.seeking) {
                    if (bufferedTime - player.currentTime > 2.5) {
              player.currentTime = bufferedTime;
              bufferedTime = null;
            }
                  }
          });
        });

        ws.onopen = function(e) {
            ws.send(JSON.stringify({
              "op": "CONNECT",
                    "d": {"channel_id": video_data.channel}
            }));
        }

        ws.onmessage = function(e) {
                console.log(e.data);
          message = JSON.parse(e.data);

          if (message.op == "CHANNEL_UPDATE") {
                  if (message.d.members.length > users) {
            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">User Joined</div>"
                        }
                  else if (message.d.members.length < users) {
            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">User Left</div>"
                              }
                users = message.d.members.length;
            if (message.d.isOwner == false) {
              player.style.pointerEvents = "none";
              video_control_bar.style.visibility = "hidden";
                    isOwner = false;
                  } else {
                          player.style.pointerEvents = "initial";
              video_control_bar.style.visibility = "initial";
                          isOwner = true;
                        }

            html = ""
                  for (var i = 0; i < message.d.members.length; i++) {
				    html += "<div class=\"item\"><div class=\"content\" style=\"color: #fff;\"><div class=\"header\" style=\"font-weight: 600;\"><i class=\"user circle icon\"></i>" + message.d.members[i].name + "</div></div></div>"
            }
            party.innerHTML = html;

            party_view.style.visibility = "visible";
                  nav.style.paddingRight = "calc(17.5% + 56px)";
                  masthead.style.marginRight = "17.5%";
                  pagebody.style.paddingRight = "calc(17.5% + 56px)";

            ws.send(JSON.stringify({
              "op": "PLAYER_PLAY",
                    "d": {"channel_id": video_data.channel, "currentTime": player.currentTime}
            }));
          }
          else if (message.op == "CHANNEL_CHAT") {
            chat.innerHTML += "<div class=\"comment\"><a class=\"avatar\"><img src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fi167.photobucket.com%2Falbums%2Fu126%2FNeckTiesandTophats%2F3650256.gif&f=1&nofb=1\"></a><div class=\"content\"><span class=\"author\" style=\"color: #fff; font-weight: 600;\">" + message.d.author + "</span><div class=\"metadata\"><span class=\"date\" style=\"color: #fff;\">" + message.d.date + "</span></div><div class=\"text\" style=\"color: #fff;\">" + message.d.text + "</div></div></div>";
          }
          else if (message.op == "PLAYER_PAUSE") {
            videojs(player, {}, function(){
              player.currentTime = message.d.currentTime;
            });
            player.pause();
          }
          else if (message.op == "PLAYER_PLAY") {
            videojs(player, {}, function(){
              player.currentTime = message.d.currentTime;
            });
            player.play();
          }
          else if (message.op == "PLAYER_SEEK") {
            videojs(player, {}, function(){
              player.currentTime = message.d.currentTime;
            });
            chat.innerHTML += "<div style=\"color: #fff;font-size: 12px;font-weight: 600;letter-spacing: 0.5px;line-height: 13px;text-transform: uppercase;\" class=\"ui inverted horizontal divider header\">Video Skipped</div>"
          }
          else if (message.op == "TIME_UPDATE") {
            bufferedTime = parseFloat(message.d.currentTime);
          }
        }

        ws.onclose = function(e) {
        }
        ws.onerror = function(e) {
          console.log(e.data);
        }
      });
      });
    </script>

    <script>
      $(document).ready(function () {
              var video_data = JSON.parse(document.getElementById('video_data').innerHTML);
              var vid = document.getElementById("player_html5_api");
              var time = parseInt(Cookies.get(video_data.id)) * 0.01;
              videojs(vid, {}, function(){
                      this.on('loadedmetadata', function(){
                              vid.currentTime = parseFloat(vid.duration * time);
                            });
                    });
            });
    </script>
